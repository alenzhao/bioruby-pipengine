#!/usr/bin/env ruby

require 'optparse'
$:<< File.expand_path(File.join(File.dirname(File.dirname __FILE__),"lib"))
require 'bio-pipengine'

options = {}
optparse = OptionParser.new do |opts|
	opts.banner = "\n\nLauncher for Complex Biological Pipelines . Copyright(C) 2012 Francesco Strozzi\n\n"
	opts.on("-p","--pipeline FILE","YAML file with pipeline and sample details") do |file|
		options[:pipeline] = file
	end
	opts.on("-f","--samples-file FILE","YAML file with samples name and directory paths") do |file|
		options[:samples_file] = file
	end
	opts.on("-l","--list SAMPLE1,SAMPLE2...",Array,"List of sample names to run the pipeline") do |sample|
		options[:samples] = sample
	end

	opts.on("-s","--steps STEP1,STEP2...",Array,"List of steps to be executed") do |steps|
		options[:steps] = steps
	end

	opts.on("-n","--name NAME","Name of the job") {|name| options[:name] = name}

	opts.on("-d","--dry","Dry run. Just create the job script without sending it to the batch system") {|dry| options[:dry] = true}

	opts.on("--local FOLDER","Local output base folder (without sample name)") {|output| options[:local] = output}

  opts.on("-h","--help","Display this screen") do
		puts opts
		print "\n"
		exit
	end
end

optparse.parse!

if options[:pipeline] && options[:samples_file]
	Bio::Pipengine.run(options)
else
	puts "Check available options: #{$0} -h"
end
