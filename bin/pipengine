#!/usr/bin/env ruby

$:<< File.expand_path(File.join(File.dirname(File.dirname __FILE__),"lib"))
require 'bio-pipengine'

options = Trollop::options do
	banner "\n\nLauncher for Complex Biological Pipelines . Copyright(C) 2013 Francesco Strozzi\n\n"
	opt :pipeline, "YAML file with pipeline and sample details", :short => "p", :type => :string, :default => "pipeline.yml"
	opt :samples_file, "YAML file with samples name and directory paths", :short => "f", :type => :string, :default => "samples.yml"
	opt :samples, "List of sample names to run the pipeline", :type => :strings, :short => "l"
	opt :steps, "List of steps to be executed", :type => :strings, :short => "s"
  opt :dry,"Dry run. Just create the job script without submitting it to the batch system", :short => "d"
	opt :local, "Local output root folder", :type => :string
	opt :create_samples, "Create samples.yml file from a Sample directory (only for CASAVA projects)", :short => "c", :type => :strings
	opt :groups, "Group of samples to be processed by a given step", :short => "g", :type => :strings
	opt :name, "Analysis name", :short => "n", :type => :string
	opt :pbs_opts, "PBS options", :type => :strings, :short => "o"
	opt :queue, "PBS queue", :type => :string, :short => "q"
	opt :inspect_steps, "Show steps", :short => "i"
	opt :pbs_stats, "Show stats on running jobs", :short => "a", :type => :strings
end

if options[:create_samples]
	Bio::Pipengine.create_samples options[:create_samples]
elsif options[:pbs_stats]
	Bio::Pipengine.show_stats(options[:pbs_stats])
elsif options[:pipeline] && options[:samples_file]
	abort("File not found: "+options[:pipeline].red) unless File.exists? options[:pipeline]
	if options[:inspect_steps]
		Bio::Pipengine.inspect_steps(options[:pipeline])
		exit
	else
		abort("File not found: "+options[:samples_file].red) unless File.exists? options[:samples_file]
		abort("Please provide a valid step name with the --step parameter".red) unless options[:steps]
		Bio::Pipengine.run(options)
	end
else
	puts "Check available options: #{$0} -h"
end


